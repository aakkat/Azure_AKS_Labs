name: Create Azure AKS With Terraform
on:
  push:
    branches:
       - main

permissions:
      id-token: write
      contents: read
      packages: read
      pull-requests: read
jobs: 
  AKS-Cluster-Deployment:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: AKS
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: "8b939382-f5c5-4581-8ad0-9573ad670b19"
          tenant-id: "07fc8f44-8a45-4e66-973d-705143cdbdd1"
          subscription-id: "94ef7338-97fb-4eba-8042-ef97ff5cebd4"
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: latest
          cli_config_credentials_token: ${{ secrets.TFC_TOKEN_ID }}

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Output
        run: terraform output

      - name: Deploy Application
        run:
          az aks get-credentials -n "cluster-bursting-jennet" -g "rg-refined-swine"
          kubectl apply -f ./AKSApp/sampleapp.yaml
          sleep 40
          kubectl get service nginx-service
          rm -rf ~/.kube
